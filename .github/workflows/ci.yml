name: CI Pipeline

on: push

jobs:
  lint_format_typecheck:
    name: Ruff Linting and Formatting, MyPy Type Checking
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$PWD" >> $GITHUB_ENV

      - name: Install Ruff and MyPy
        run: pip install ruff mypy

      - name: Run Ruff (Linting)
        run: ruff check assassinate/

      - name: Run Ruff (Formatting)
        run: ruff format assassinate/

      - name: Run MyPy (Type Checking)
        run: |
          export PYTHONPATH=$(pwd)/assassinate
          mypy --explicit-package-bases assassinate/


  build_c_library:
    name: Build and Test C Library
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./metasploit_core
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install Build Tools and Ruby Development Headers
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential ruby-full ruby-dev

      - name: Verify Ruby Installation
        run: |
          ruby --version
          gem --version
          ls /usr/include/ruby*
          ls /usr/include/x86_64-linux-gnu/ruby*

      - name: Build C Library
        run: |
          make

      - name: Verify Shared Library
        run: ls -l metasploit_core.so

#  Temp disable Pytest
#  test_python:
#    name: Run Python Tests
#    runs-on: ubuntu-latest
#    needs: [lint_format_typecheck, build_c_library]
#    steps:
#      - name: Checkout Repository
#        uses: actions/checkout@v3
#
#      - name: Set up Python
#        uses: actions/setup-python@v4
#        with:
#          python-version: "3.12"
#
#      - name: Install Python Dependencies
#        run: |
#          python -m pip install --upgrade pip
#          pip install -r assassinate/requirements.txt
#
#      - name: Run Python Unit Tests
#        run: python -m unittest discover -s assassinate/tests -v

  documentation:
    name: Build Documentation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install Documentation Tools
        run: pip install sphinx myst-parser

      - name: Build Documentation
        run: |
          cd docs/
          make clean
          make html
